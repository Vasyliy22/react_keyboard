{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handlePressKey","event","setState","key","document","addEventListener","this","window","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,MAFhB,EAaEC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAdtC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,kBAN5C,kCASE,WACEO,OAAOC,oBAAoB,QAASF,KAAKN,kBAV7C,oBAiBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKU,UAAU,MAAf,SACGV,EAEG,mBAAGU,UAAU,eAAb,4CAC+BV,EAD/B,OAIA,mBAAGU,UAAU,eAAb,2CA5BZ,GAAyBC,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.6bb70ad5.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string | null;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    pressedKey: null,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handlePressKey);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keyup', this.handlePressKey);\n  }\n\n  handlePressKey = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        {pressedKey\n          ? (\n            <p className=\"App__message\">\n              {`The last pressed key is [${pressedKey}]`}\n            </p>\n          )\n          : <p className=\"App__message\">Nothing was pressed yet</p>}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}